name: Build and Push to ECR

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: pixell-runtime

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        # Build docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
        # Tag as latest for main branch
        if [ "$BRANCH_NAME" = "main" ]; then
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        fi
        
        # Tag with branch name
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME
        
        # Push images
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME
        
        if [ "$BRANCH_NAME" = "main" ]; then
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        fi
        
        echo "âœ… Successfully built and pushed:"
        echo "   - $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "   - $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME"
        if [ "$BRANCH_NAME" = "main" ]; then
          echo "   - $ECR_REGISTRY/$ECR_REPOSITORY:latest"
        fi
