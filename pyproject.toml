[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pixell-runtime"
version = "0.1.0"
description = "Lightweight hosting layer for serving Agent Packages (APKGs)"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Pixell Core Team", email = "dev@pixell.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.26.0",
    "boto3>=1.34.0",
    "pyyaml>=6.0.1",
    "prometheus-client>=0.19.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "structlog>=24.1.0",
    "asyncio>=3.4.3",
    "aiofiles>=23.2.1",
    "cryptography>=42.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.8.0",
    "ruff>=0.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "pre-commit>=3.6.0",
    "httpx>=0.26.0",
    "moto[s3]>=4.2.0",
]

[project.scripts]
pixell-runtime = "pixell_runtime.main:run"

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/pixell_runtime"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false